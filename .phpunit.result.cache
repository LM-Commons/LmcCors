C:37:"PHPUnit\Runner\DefaultTestResultCache":7657:{a:2:{s:7:"defects";a:42:{s:68:"ZfrCorsTest\Service\CorsServiceTest::testEnsureVaryHeaderForNoOrigin";i:6;s:64:"ZfrCorsTest\Factory\CorsOptionsFactoryTest::testCanCreateOptions";i:4;s:84:"ZfrCorsTest\Factory\CorsRequestListenerFactoryTest::testCanCreateCorsRequestListener";i:4;s:68:"ZfrCorsTest\Factory\CorsServiceFactoryTest::testCanCreateCorsService";i:4;s:37:"ZfrCorsTest\ModuleTest::testGetConfig";i:4;s:63:"ZfrCorsTest\ModuleTest::testAssertListenerIsCorrectlyRegistered";i:6;s:51:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testAttach";i:4;s:75:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testReturnNothingForNonCorsRequest";i:4;s:93:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testImmediatelyReturnResponseForPreflightCorsRequest";i:4;s:88:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testReturnNothingForNormalAuthorizedCorsRequest";i:4;s:103:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testReturnUnauthorizedResponseForNormalUnauthorizedCorsRequest";i:4;s:107:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testImmediatelyReturnBadRequestResponseForInvalidOriginHeaderValue";i:4;s:91:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testOnCorsRequestCanHandleInvalidOriginHeaderValue";i:4;s:75:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testPreflightWorksWithMethodRoutes";i:4;s:71:"ZfrCorsTest\Options\CorsOptionsTest::testCorsOptionsAreSecuredByDefault";i:4;s:57:"ZfrCorsTest\Options\CorsOptionsTest::testCanModifyOptions";i:4;s:61:"ZfrCorsTest\Options\CorsOptionsTest::testNormalizeHttpMethods";i:4;s:61:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectCorsRequest";i:4;s:75:"ZfrCorsTest\Service\CorsServiceTest::testIsNotCorsRequestIfNotACrossRequest";i:4;s:66:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectPreflightRequest";i:4;s:72:"ZfrCorsTest\Service\CorsServiceTest::testProperlyCreatePreflightResponse";i:4;s:81:"ZfrCorsTest\Service\CorsServiceTest::testDoesNotAddAllowCredentialsHeadersIfAsked";i:4;s:69:"ZfrCorsTest\Service\CorsServiceTest::testCanReturnWildCardAllowOrigin";i:4;s:78:"ZfrCorsTest\Service\CorsServiceTest::testCanReturnWildCardSubDomainAllowOrigin";i:4;s:88:"ZfrCorsTest\Service\CorsServiceTest::testCanReturnWildCardSubDomainWithSchemeAllowOrigin";i:4;s:88:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForMissMatchedWildcardSubDomainOrigin";i:4;s:89:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForRootDomainOnWildcardSubDomainOrigin";i:4;s:94:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForDifferentSchemeOnWildcardSubDomainOrigin";i:4;s:67:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForUnknownOrigin";i:4;s:79:"ZfrCorsTest\Service\CorsServiceTest::testEnsureNoVaryHeaderWhenAcceptsAnyOrigin";i:4;s:69:"ZfrCorsTest\Service\CorsServiceTest::testCanPopulateNormalCorsRequest";i:4;s:78:"ZfrCorsTest\Service\CorsServiceTest::testRefuseNormalCorsRequestIfUnauthorized";i:4;s:69:"ZfrCorsTest\Service\CorsServiceTest::testAddVaryHeaderInNormalRequest";i:4;s:72:"ZfrCorsTest\Service\CorsServiceTest::testAppendVaryHeaderInNormalRequest";i:4;s:83:"ZfrCorsTest\Service\CorsServiceTest::testPopulatesAllowCredentialsNormalCorsRequest";i:4;s:89:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectCorsRequestFromSameHostButDifferentPort";i:4;s:91:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectCorsRequestFromSameHostButDifferentScheme";i:4;s:72:"ZfrCorsTest\Service\CorsServiceTest::testCanHandleUnconfiguredRouteMatch";i:4;s:70:"ZfrCorsTest\Service\CorsServiceTest::testCanHandleConfiguredRouteMatch";i:4;s:84:"ZfrCorsTest\Service\CorsServiceTest::testDoesNotCrashApplicationOnInvalidOriginValue";i:4;s:83:"ZfrCorsTest\Service\CorsServiceTest::testCanPopulateNormalCorsRequestWithRouteMatch";i:4;s:99:"ZfrCorsTest\Service\CorsServiceTest::testCanPopulateNormalCorsRequestWithRouteMatchRewriteException";i:4;}s:5:"times";a:42:{s:64:"ZfrCorsTest\Factory\CorsOptionsFactoryTest::testCanCreateOptions";d:0.041;s:84:"ZfrCorsTest\Factory\CorsRequestListenerFactoryTest::testCanCreateCorsRequestListener";d:0.005;s:68:"ZfrCorsTest\Factory\CorsServiceFactoryTest::testCanCreateCorsService";d:0.002;s:37:"ZfrCorsTest\ModuleTest::testGetConfig";d:0.002;s:63:"ZfrCorsTest\ModuleTest::testAssertListenerIsCorrectlyRegistered";d:0.026;s:51:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testAttach";d:0.001;s:75:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testReturnNothingForNonCorsRequest";d:0.005;s:93:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testImmediatelyReturnResponseForPreflightCorsRequest";d:0.01;s:88:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testReturnNothingForNormalAuthorizedCorsRequest";d:0.001;s:103:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testReturnUnauthorizedResponseForNormalUnauthorizedCorsRequest";d:0.007;s:107:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testImmediatelyReturnBadRequestResponseForInvalidOriginHeaderValue";d:0.003;s:91:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testOnCorsRequestCanHandleInvalidOriginHeaderValue";d:0;s:75:"ZfrCorsTest\Mvc\CorsRequestListenerTest::testPreflightWorksWithMethodRoutes";d:0.005;s:71:"ZfrCorsTest\Options\CorsOptionsTest::testCorsOptionsAreSecuredByDefault";d:0.001;s:57:"ZfrCorsTest\Options\CorsOptionsTest::testCanModifyOptions";d:0.001;s:61:"ZfrCorsTest\Options\CorsOptionsTest::testNormalizeHttpMethods";d:0;s:61:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectCorsRequest";d:0.001;s:75:"ZfrCorsTest\Service\CorsServiceTest::testIsNotCorsRequestIfNotACrossRequest";d:0.001;s:66:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectPreflightRequest";d:0.001;s:72:"ZfrCorsTest\Service\CorsServiceTest::testProperlyCreatePreflightResponse";d:0.002;s:81:"ZfrCorsTest\Service\CorsServiceTest::testDoesNotAddAllowCredentialsHeadersIfAsked";d:0.001;s:69:"ZfrCorsTest\Service\CorsServiceTest::testCanReturnWildCardAllowOrigin";d:0.001;s:78:"ZfrCorsTest\Service\CorsServiceTest::testCanReturnWildCardSubDomainAllowOrigin";d:0.001;s:88:"ZfrCorsTest\Service\CorsServiceTest::testCanReturnWildCardSubDomainWithSchemeAllowOrigin";d:0.001;s:88:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForMissMatchedWildcardSubDomainOrigin";d:0.001;s:89:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForRootDomainOnWildcardSubDomainOrigin";d:0.001;s:94:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForDifferentSchemeOnWildcardSubDomainOrigin";d:0.001;s:67:"ZfrCorsTest\Service\CorsServiceTest::testReturnNullForUnknownOrigin";d:0.001;s:68:"ZfrCorsTest\Service\CorsServiceTest::testEnsureVaryHeaderForNoOrigin";d:0.001;s:79:"ZfrCorsTest\Service\CorsServiceTest::testEnsureNoVaryHeaderWhenAcceptsAnyOrigin";d:0;s:69:"ZfrCorsTest\Service\CorsServiceTest::testCanPopulateNormalCorsRequest";d:0.001;s:78:"ZfrCorsTest\Service\CorsServiceTest::testRefuseNormalCorsRequestIfUnauthorized";d:0.002;s:69:"ZfrCorsTest\Service\CorsServiceTest::testAddVaryHeaderInNormalRequest";d:0.001;s:72:"ZfrCorsTest\Service\CorsServiceTest::testAppendVaryHeaderInNormalRequest";d:0.001;s:83:"ZfrCorsTest\Service\CorsServiceTest::testPopulatesAllowCredentialsNormalCorsRequest";d:0.001;s:89:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectCorsRequestFromSameHostButDifferentPort";d:0.001;s:91:"ZfrCorsTest\Service\CorsServiceTest::testCanDetectCorsRequestFromSameHostButDifferentScheme";d:0.001;s:72:"ZfrCorsTest\Service\CorsServiceTest::testCanHandleUnconfiguredRouteMatch";d:0.001;s:70:"ZfrCorsTest\Service\CorsServiceTest::testCanHandleConfiguredRouteMatch";d:0.001;s:84:"ZfrCorsTest\Service\CorsServiceTest::testDoesNotCrashApplicationOnInvalidOriginValue";d:0.001;s:83:"ZfrCorsTest\Service\CorsServiceTest::testCanPopulateNormalCorsRequestWithRouteMatch";d:0.001;s:99:"ZfrCorsTest\Service\CorsServiceTest::testCanPopulateNormalCorsRequestWithRouteMatchRewriteException";d:0.001;}}}